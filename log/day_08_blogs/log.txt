前端页面需要混合HTML、CSS和JavaScript，如果对这三者没有深入地掌握，编写的前端页面将很快难以维护。

更大的问题在于，前端页面通常是动态页面，也就是说，前端页面往往是由后端代码生成的。

要编写可维护的前端代码绝非易事，和后端结合的MVC模式已经无法满足复杂页面逻辑的需要了。

MVVM：Model View ViewModel

MVVM最早由微软提出来，它借鉴了桌面应用程序的MVC思想，在前端页面中，把Model用纯JavaScript对象表示；

由于Model表示数据，View负责显示，两者做到了最大限度的分离。

把Model和View关联起来的就是ViewModel。

ViewModel负责把Model的数据同步到View显示出来，还负责把View的修改同步回Model。


错误：
/manage/blogs/create  没有页面，输入地址会到登录页面

原因：manage_blog_edit.html 里面出错（不知道具体位置，不想看）

待改进：
进入/manage/blogs/create 页面需要两次输入网址
去掉'action':'/api/blogs'
def manage_create_blog():
    return {
        '__template__':'manage_blog_edit.html',
        'id':'',
        #'action':'/api/blogs'
    }
